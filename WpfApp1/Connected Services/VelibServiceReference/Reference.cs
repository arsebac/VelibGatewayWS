//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1.VelibServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contract", Namespace="http://schemas.datacontract.org/2004/07/VelibGatewayWS")]
    [System.SerializableAttribute()]
    public partial class Contract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] citiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string commercial_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string country_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] cities {
            get {
                return this.citiesField;
            }
            set {
                if ((object.ReferenceEquals(this.citiesField, value) != true)) {
                    this.citiesField = value;
                    this.RaisePropertyChanged("cities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string commercial_name {
            get {
                return this.commercial_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.commercial_nameField, value) != true)) {
                    this.commercial_nameField = value;
                    this.RaisePropertyChanged("commercial_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country_code {
            get {
                return this.country_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.country_codeField, value) != true)) {
                    this.country_codeField = value;
                    this.RaisePropertyChanged("country_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/VelibGatewayWS")]
    [System.SerializableAttribute()]
    public partial class Station : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int available_bikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int available_bikes {
            get {
                return this.available_bikesField;
            }
            set {
                if ((this.available_bikesField.Equals(value) != true)) {
                    this.available_bikesField = value;
                    this.RaisePropertyChanged("available_bikes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/VelibGatewayWS")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VelibServiceReference.IVelibService")]
    public interface IVelibService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetContractsList", ReplyAction="http://tempuri.org/IVelibService/GetContractsListResponse")]
        WpfApp1.VelibServiceReference.Contract[] GetContractsList(bool useCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetContractsList", ReplyAction="http://tempuri.org/IVelibService/GetContractsListResponse")]
        System.Threading.Tasks.Task<WpfApp1.VelibServiceReference.Contract[]> GetContractsListAsync(bool useCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetStationsByContract", ReplyAction="http://tempuri.org/IVelibService/GetStationsByContractResponse")]
        WpfApp1.VelibServiceReference.Station[] GetStationsByContract(WpfApp1.VelibServiceReference.Contract contract, bool useCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetStationsByContract", ReplyAction="http://tempuri.org/IVelibService/GetStationsByContractResponse")]
        System.Threading.Tasks.Task<WpfApp1.VelibServiceReference.Station[]> GetStationsByContractAsync(WpfApp1.VelibServiceReference.Contract contract, bool useCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/SearchContract", ReplyAction="http://tempuri.org/IVelibService/SearchContractResponse")]
        WpfApp1.VelibServiceReference.Contract[] SearchContract(string contract, bool useCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/SearchContract", ReplyAction="http://tempuri.org/IVelibService/SearchContractResponse")]
        System.Threading.Tasks.Task<WpfApp1.VelibServiceReference.Contract[]> SearchContractAsync(string contract, bool useCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IVelibService/GetDataUsingDataContractResponse")]
        WpfApp1.VelibServiceReference.CompositeType GetDataUsingDataContract(WpfApp1.VelibServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVelibService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IVelibService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WpfApp1.VelibServiceReference.CompositeType> GetDataUsingDataContractAsync(WpfApp1.VelibServiceReference.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVelibServiceChannel : WpfApp1.VelibServiceReference.IVelibService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VelibServiceClient : System.ServiceModel.ClientBase<WpfApp1.VelibServiceReference.IVelibService>, WpfApp1.VelibServiceReference.IVelibService {
        
        public VelibServiceClient() {
        }
        
        public VelibServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VelibServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VelibServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VelibServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfApp1.VelibServiceReference.Contract[] GetContractsList(bool useCache) {
            return base.Channel.GetContractsList(useCache);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.VelibServiceReference.Contract[]> GetContractsListAsync(bool useCache) {
            return base.Channel.GetContractsListAsync(useCache);
        }
        
        public WpfApp1.VelibServiceReference.Station[] GetStationsByContract(WpfApp1.VelibServiceReference.Contract contract, bool useCache) {
            return base.Channel.GetStationsByContract(contract, useCache);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.VelibServiceReference.Station[]> GetStationsByContractAsync(WpfApp1.VelibServiceReference.Contract contract, bool useCache) {
            return base.Channel.GetStationsByContractAsync(contract, useCache);
        }
        
        public WpfApp1.VelibServiceReference.Contract[] SearchContract(string contract, bool useCache) {
            return base.Channel.SearchContract(contract, useCache);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.VelibServiceReference.Contract[]> SearchContractAsync(string contract, bool useCache) {
            return base.Channel.SearchContractAsync(contract, useCache);
        }
        
        public WpfApp1.VelibServiceReference.CompositeType GetDataUsingDataContract(WpfApp1.VelibServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WpfApp1.VelibServiceReference.CompositeType> GetDataUsingDataContractAsync(WpfApp1.VelibServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
